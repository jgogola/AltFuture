@model Crypto

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>Dashboard</h1>


<ul class="navbar-nav flex-grow-1">

    <li class="nav-item">
        <a class="nav-link" asp-controller="Assets" asp-action="Index">Assets</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-controller="TransactionImports" asp-action="Index">Import Transactions</a>
    </li>


</ul>



@Model.CryptoId <br />
@Model.CryptoName


<br /><br />
<div id="d1"></div>

<!--Load the AJAX API-->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {
        var jsonData;

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetData", "Dashboard")",
            dataType: "json",
            async: false,
             success: function (d) {
                jsonData = d;
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error: " + textStatus, errorThrown);
            }
        });

        // Create our data table out of JSON data loaded from server.
        var data = new google.visualization.arrayToDataTable(jsonData);

      // Set chart options
      var options = {'title':'Crypto Investment Percentages',
                     'width':400,
                     'height':300};

      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>

<!--Div that will hold the pie chart-->
<div id="chart_div"></div>



<script type="text/javascript">
    google.charts.load('current', { 'packages': ['bar'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Crypto', 'Invested', 'Profit'],
            ['BTC', 1000, 400],
            ['ADA', 1170, 460],
            ['ETH', 660, 1120]
        ]);

        var options = {
            chart: {
                title: 'Crypto Performance',
                subtitle: 'Investements and Profit',
            }
        };

        var chart = new google.charts.Bar(document.getElementById('columnchart_material'));

        chart.draw(data, google.charts.Bar.convertOptions(options));
    }
</script>

<div id="columnchart_material"></div>