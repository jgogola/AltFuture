@using X.PagedList;
@using X.PagedList.Mvc.Core;

@model IPagedList<Transaction>

@{
    ViewData["Title"] = "Transaction History";
}

<div class="container">
    <section class="section-page-header">
        <h1 class="text-center">Transaction History</h1>
        <p class="lead text-light text-center">
            This is a list of all your portfolio's' transactions as collected from the exchanges you inputed data from.
        </p>
        <a class="close-page" asp-controller="Dashboard" asp-action="Index" title="Return to portfolio dashboard."><i class="fa-solid fa-rectangle-xmark"></i></a>
    </section>

    <section class="section-container">
        <div class="text-end">
            <a asp-action="Create" class="btn btn-success">Create New <i class="fa-solid fa-plus" style="color: #ffffff;"></i></i></a>
        </div>

        @{
            if(Model.Count == 0)
            {
                <div class="alert alert-info mt-4" role="alert">
                    <h4 class="alert-heading">No Transactions Found</h4>
                    <p>
                        You have no transactions in your portfolio. You can add transactions by clicking the "Create New" button above.
                    </p>
                </div>
            }
            else
            {
                <table class="table table-dark table-hover mt-2">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Crypto)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Quantity)
                            </th>
                            <th>
                                Invested <span class="d-none d-lg-inline">Amount</span>
                            </th>
                            <th class="d-none d-lg-table-cell">
                                @Html.DisplayNameFor(model => model[0].Fee)
                            </th>
                            <th class="d-none d-lg-table-cell">
                                Transaction Total
                            </th>
                            <th>
                                <span class="d-none d-lg-inline">Transaction</span> Date
                            </th>
                            <th>
                                Exchange
                            </th>
                            <th class="text-end">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @item.Crypto.CryptoName
                                </td>
                                <td>
                                    @item.Price.ToString("C")
                                </td>
                                <td>
                                    @item.Quantity.ToString("N4")
                                </td>
                                <td>
                                    @item.InvestmentTotal.ToString("C")
                                </td>
                                <td class="d-none d-lg-table-cell">
                                    @item.Fee.ToString("C")
                                </td>
                                <td class="d-none d-lg-table-cell">
                                    @item.TransactionTotal.ToString("C")
                                </td>
                                <td>
                                    @item.TransactionDate
                                </td>
                                <td>
                                    @item.FromExchange.ExchangeName
                                </td>
                                <td class="text-end">
                                    <a asp-action="Details" asp-route-id="@item.TransactionId" class="btn btn-primary btn-sm" title="View Details">
                                        <i class="fa-solid fa-eye" style="color: #ffffff;"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.TransactionId" class="btn btn-success btn-sm" title="Edit Details">
                                        <i class="fa-solid fa-pencil" style="color: #ffffff;"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.TransactionId" class="btn btn-danger btn-sm" title="Delete" role="button">
                                        <i class="fa-solid fa-trash" style="color: #ffffff;"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @Html.PagedListPager( @Model, page => Url.Action("Index", new { page }),
                    new X.PagedList.Web.Common.PagedListRenderOptions {
                    LiElementClasses = new string[] {"page-item"},
                    PageClasses = new string[] {"page-link"},
                    }
                )
            }
        }

    </section>
</div>


<partial name="Partials/_UserMessage" />