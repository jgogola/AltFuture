@model CryptoViewModel

@{
    ViewData["Title"] = "Create Crypto";
}

<div class="container">
    <h1 class="text-center">Create Crypto</h1>

    <section class="section-container">
        <div class="row text-light mt-5">
            <div class="col-md-4">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           
                    <div class="form-group">
                        <label asp-for="CryptoName" class="control-label"></label>
                        <input asp-for="CryptoName" class="form-control" />
                        <span asp-validation-for="CryptoName" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="TickerSymbol" class="control-label"></label>
                        <input asp-for="TickerSymbol" class="form-control" />
                        <span asp-validation-for="TickerSymbol" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3 text-center">
                        <a asp-action="Index" class="btn btn-info btn-sm me-3">
                            <i class="fa-solid fa-right-to-bracket fa-rotate-180"></i>
                            Back to List
                        </a>
                        <input type="submit" value="Create" class="btn btn-success btn-sm ps-5 pe-5" />
                    </div>
                </form>
            </div>
        </div>
    </section>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
